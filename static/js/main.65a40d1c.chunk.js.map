{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAMC,EAAS,EAATA,GAC1B,OACD,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACG,6BAAKF,IACL,4BAAIC,WCmBKK,EAxBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,8BAEEA,EAAOC,KAAI,SAACC,EAAKC,GACd,OAAS,cAAC,EAAD,CAELR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIFC,EAZC,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC7B,OACA,qBAAKV,UAAU,MAAf,SACO,uBACAA,UAAU,mCACVW,KAAK,SACJC,YAAY,gBACZC,SAAUH,OCEJI,EATA,SAACC,GAChB,OACA,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACEJ,EAAMK,YCkBOC,G,wDApBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAMC,GACvBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAEzB,WACC,OAAIG,KAAKJ,MAAMC,SACP,yDAGDG,KAAKX,MAAMK,a,GAhBQQ,cCiDbC,E,kDA1Cd,aAAe,IAAD,8BACb,gBAYDC,eAAgB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAYsB,EAAMC,OAAOC,SAZ3C,EAAKX,MAAQ,CACZlB,OAAO,GACPK,YAAa,IAJD,E,qDAOb,WAAoB,IAAD,OAClByB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAAEvB,OAAOkC,S,oBAQzC,WAAS,IAAD,OAEFC,EAAeb,KAAKJ,MAAMlB,OAAOoC,QAAQ,SAAAC,GACvC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAGxE,OAAOhB,KAAKJ,MAAMlB,OAAOwC,OAGxB,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WAP1B,6C,GA1BeX,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACN,cAAC,EAAD,IACCC,SAASC,eAAe,SAM5BX,M","file":"static/js/main.65a40d1c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email,id }) => {\r\n\treturn(\t\t\r\n<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n    <img alt='robot' src={`https://robohash.org/${id}?200*200`}/>\r\n    <div>\r\n       <h2>{name}</h2>\r\n       <p>{email}</p>\r\n     </div>\r\n </div>\r\n \t\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n import Card from './Card';\r\n \r\n const CardList=({ robots }) => {\r\n \r\n return (\r\n   <div>\r\n   { \r\n     robots.map((user,i) => {\r\n        return ( <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email} \r\n            /> \r\n        );\r\n     })\r\n\r\n    }\r\n\r\n    </div>\r\n\r\n\r\n \t);\r\n\r\n \t\r\n }\r\n export default CardList;","import React from 'react';\r\n\r\nconst Searchbox=({searchfield,searchChange}) => {\r\n\treturn(\r\n\t<div className='pa2'>\r\n        <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n         placeholder='search robots'\r\n         onChange={searchChange} />\r\n         \r\n     </div>\r\n\t\t);\r\n}\r\nexport default Searchbox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\nreturn(\r\n<div style={{overflowY:'scroll', border:'5px solid black', height:'800px'}}>\r\n\t{props.children}\r\n</div>\r\n\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React ,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n     }\r\n\r\n\tcomponentDidCatch(error,info){\r\n\t\tthis.setState({hasError:true})\r\n    }\r\n\trender(){\r\n\t\tif (this.state.hasError){\r\n\t\t\treturn <h1>oooops.That is not good</h1>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","\r\nimport React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Searchbox from '../components/Searchbox';\r\nimport Scroll from '../components/Scroll';\r\nimport'./App.css';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots:[], \r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n  componentDidMount(){\r\n  \tfetch('https://jsonplaceholder.typicode.com/users')\r\n  \t    .then(response=>response.json())\r\n  \t    .then(users=>this.setState({ robots:users }) );\r\n  }\r\n\t\r\n\tonSearchChange= (event) => {\r\n\t\t  this.setState({ searchfield:event.target.value})\r\n        }\r\n\r\n\r\n  render(){\r\n\t\t//const {robots, searchfield}=this.state;\r\n\t\tconst filterRobots = this.state.robots.filter( robot => {\r\n        \t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n    })\r\n\r\n\t\treturn!this.state.robots.length ?\r\n\t\t <h1>Loading</h1>: \r\n       (\r\n\t\t\t<div className='tc'>\r\n\t\t\t    <h1 className='f1'>Robofriends</h1>\r\n\t\t\t    <Searchbox searchChange={this.onSearchChange}/>\r\n\t\t\t    <Scroll>\r\n\t\t\t        <ErrorBoundary>\r\n\t\t\t\t       <CardList robots={filterRobots}/>\r\n\t\t\t\t    </ErrorBoundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n \r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n   <App/>          \n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}